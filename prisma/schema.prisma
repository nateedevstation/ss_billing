// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model resident {
  id Int @id() @default(autoincrement())
  prefix String 
  first_name String
  last_name String
  chaya String
  tel String  
  time_create DateTime @default(now())
  time_stamp DateTime @default(now())
}

model room {
  id Int @id @default(autoincrement())

}

model mitor {
  id Int  @id @default(autoincrement())
  mitor_no Int 
  time_create DateTime @default(now())
  time_stamp DateTime @default(now())
}

model config{
  id Int  @id @default(autoincrement())
  multiply_mitor Int 
  internet Int
  time_create DateTime @default(now())
  time_stamp DateTime @default(now())
}

model billing {
  id          Int      @id @default(autoincrement())
  invoice_no  String   @unique                // เลขที่บิล
  total       Float                             // จำนวนเงินรวม (required)
  issuedAt    DateTime @default(now())          // วันที่ออกบิล
  dueAt       DateTime?                         // วันครบกำหนด (optional)
  note        String?

  // Relation ไปยัง Payment
  paymentId   Int
  payment     payment @relation(fields: [paymentId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model payment {
  id        Int      @id @default(autoincrement())
  amount    Float
  method    String
  paidAt    DateTime @default(now())

  // back relation
  billings  billing[]
}